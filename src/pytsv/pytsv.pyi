# Stubs for pytsv.pytsv (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

CHECK_NON_ASCII = ...  # type: bool
SKIP_COMMENTS = ...  # type: bool
VALIDATE_ALL_LINES_SAME_NUMBER_OF_FIELDS = ...  # type: bool
USE_ANY_FORMAT = ...  # type: bool
SANITIZE = ...  # type: bool
CLEAN_EDGES = ...  # type: bool
SUB_TRAILING = ...  # type: bool
REMOVE_NON_ASCII = ...  # type: bool
LOWER_CASE = ...  # type: bool
CHECK_NUM_FIELDS = ...  # type: bool
CONVERT_TO_STRING = ...  # type: bool
DO_GZIP = ...  # type: bool
FILENAME_DETECT = ...  # type: bool

def clean(text, clean_edges: bool = ..., sub_trailing: bool = ..., remove_non_ascii: bool = ..., lower_case: bool = ...): ...
def aggregate(input_file_names, match_columns, aggregate_columns, output_file_name, unlink: bool = ...): ...
def write_data(data, output_file_name): ...
def group_by(input_file_names, group_by_columns, collect_columns, output_file_template, unlink: bool = ...): ...
def is_ascii(s): ...

class TsvWriter:
    io = ...  # type: Any
    throw_exceptions = ...  # type: Any
    sanitize = ...  # type: Any
    fields_to_clean = ...  # type: Any
    clean_edges = ...  # type: Any
    sub_trailing = ...  # type: Any
    remove_non_ascii = ...  # type: Any
    lower_case = ...  # type: Any
    check_num_fields = ...  # type: Any
    num_fields = ...  # type: Any
    convert_to_string = ...  # type: Any
    def __init__(self, filename, mode: str = ..., throw_exceptions: bool = ..., sanitize: Any = ..., fields_to_clean: Optional[Any] = ..., clean_edges: Any = ..., sub_trailing: Any = ..., remove_non_ascii: Any = ..., lower_case: Any = ..., check_num_fields: Any = ..., num_fields: Optional[Any] = ..., convert_to_string: Any = ..., do_gzip: Any = ..., filename_detect: Any = ...) -> None: ...
    def write(self, l): ...
    def close(self): ...
    def __enter__(self): ...
    def __exit__(self, itype, value, traceback): ...

class TsvReader:
    io = ...  # type: Any
    validate_all_lines_same_number_of_fields = ...  # type: Any
    num_fields = ...  # type: Any
    skip_comments = ...  # type: Any
    check_non_ascii = ...  # type: Any
    line_number = ...  # type: int
    def __init__(self, filename, mode: str = ..., use_any_format: Any = ..., validate_all_lines_same_number_of_fields: Any = ..., num_fields: Optional[Any] = ..., skip_comments: Any = ..., check_non_ascii: Any = ...) -> None: ...
    def __next__(self): ...
    def __iter__(self): ...
    def __enter__(self): ...
    def __exit__(self, itype, value, traceback): ...
    def close(self): ...

def write_dict(filename: Optional[Any] = ..., d: Optional[Any] = ...): ...
